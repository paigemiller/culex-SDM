\documentclass[10pt]{article}

\usepackage[utf8]{inputenc}
\usepackage[american]{babel}
\usepackage{graphicx}
\usepackage{amsmath}
\usepackage{amsthm}
\usepackage{amssymb}
\usepackage{natbib}
\usepackage[margin=0.5in]{geometry}
\usepackage{fancyvrb}
\usepackage{Sweave}

\DefineVerbatimEnvironment{Sinput}{Verbatim}{xleftmargin=2em}
\DefineVerbatimEnvironment{Soutput}{Verbatim}{xleftmargin=2em}
\DefineVerbatimEnvironment{Scode}{Verbatim}{xleftmargin=2em}
\fvset{listparameters={\setlength{\topsep}{0pt}}}
\renewenvironment{Schunk}{\vspace{\topsep}}{\vspace{\topsep}}

\setlength{\parskip}{.1in}  
\setlength{\parindent}{0.0in}  

\setcounter{tocdepth}{1}
%\setcounter{secnumdepth}{1}

\newcommand{\R}{\textsf{R}}
\newcommand{\code}[1]{\texttt{#1}}
  
%\SweaveOpts{eps=FALSE, pdf=TRUE, png=TRUE, keep.source=FALSE, echo=TRUE, eval=TRUE}
  
\title{Ecological geometry of Africa}
\author{John M. Drake}
  
\begin{document}
\SweaveOpts{concordance=TRUE}

\maketitle
  
\section{Introduction}
  
My studies of mosquito distributions in Africa have routinely yielded two interesting phenomena: (1) at least two species (\textit{Anopheles arabiensis} and \textit{Culex pipiens}) are climate generalists in the space of the first two principal components of environmental space, and (2) the set of environmental conditions appears as a ``ring'' in the first two principal components and a ``sheet'' in three principal components.

The purpose of this study is to seek to understand this phenomena better.

\section{Exploratory plots}

First we load data from the ongoing study of \textit{Cx. pipiens}. 

<<load-data>>=
require(dismo)
require(raster)
load('culex-v4.RData')
@

Now we plot the familar pca plot of environmental conditions in Africa where the scatterplot is resutricted to 2000 observations to better show the ``ring''. To ensure that these are not ordered in any way, these points are chosen randomly.

<<screeplot, width=6, height=9, fig=TRUE>>=
par(mfrow=c(2,1))
plot(pca, main='Scree plot', cex.main=0.5)
set.seed(10281979)
n <- dim(pca$x)[1]
pca.sample <- pca$x[sample(seq(1,50000),5000),]
plot(pca.sample[,1:2], main='Principal Components Analysis (n=2,000)',
     pch=19, cex=0.02, col='grey', cex.main=0.5, xlab='PC1', ylab='PC2')
@

Now, we again inspect the plot in three dimensions

<<pca-3d, width=6, height=9, fig=TRUE>>=
require(scatterplot3d)
par(mfrow=c(3,1))
scatterplot <- scatterplot3d(pca.sample[,1:3], pch=19, cex.symbols=0.2, type='p',
                             highlight.3d=TRUE, xlab='PC1', ylab='PC2', zlab='PC3', angle=45)
scatterplot <- scatterplot3d(pca.sample[,1:3], pch=19, cex.symbols=0.2, type='p',
                             highlight.3d=TRUE, xlab='PC1', ylab='PC2', zlab='PC3', angle=100)
scatterplot <- scatterplot3d(pca.sample[,1:3], pch=19, cex.symbols=0.2, type='p',
                             highlight.3d=TRUE, xlab='PC1', ylab='PC2', zlab='PC3', angle=-20)
@

These plots show that there are a few different clusters entangled with each other. At this stage I think some kind of clustering or nonlinear component decomposition is warranted. For now, I'm going to see if I can go learn something about kernel pca and related techniques.

From my reading, it looks like kernal pca followed by k-means clustering or ``spectral clustering'' may provide precisely what is needed here.

Possibly the first four principal components should be used.

It would appear that the kernlab package in R offers much of the desired functionality.

Note: we should probably go back and extract the kernelized principal components of the original raw environmental data.

<<kPCA>>=
require(kernlab)

set.seed(10281979)
n <- 5e3
z <- extract(environmental.data.rs, randomPoints(environmental.data.rs, n))
pca <- prcomp(z)

kpc <- kpca(z,kernel="rbfdot",kpar=list(sigma=0.2),features=2)


# another example using the iris
data(iris)
test <- sample(1:150,20)

kpc <- kpca(~.,data=iris[-test,-5],kernel="rbfdot",
            kpar=list(sigma=0.2),features=2)

#print the principal component vectors
pcv(kpc)

#plot the data projection on the components
plot(rotated(kpc),
     xlab="1st Principal Component",ylab="2nd Principal Component")

#embed remaining points 
emb <- predict(kpc,iris[test,-5])
points(emb,col=as.integer(iris[test,5]))

@


\end{document}