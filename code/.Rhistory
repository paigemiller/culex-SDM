require(spaero)
require(dplR)
require(TTR)
require(dplyr)
require(knitr)
require(earlywarning)
require(sfsmisc)
require(rlist)
nonseas.1.1 <- get_dynamic_ews1(sim.list=trt1, bw=100)
nonseas.75.1 <- get_dynamic_ews1(sim.list=trt2, bw=100)
nonseas.50.1 <- get_dynamic_ews1(sim.list=trt3, bw=100)
med.1.1 <- get_dynamic_ews1(sim.list=trt4, bw=100)
med.75.1 <- get_dynamic_ews1(sim.list=trt5, bw=100)
med.50.1 <- get_dynamic_ews1(sim.list=trt6, bw=100)
high.1.1 <- get_dynamic_ews1(sim.list=trt7, bw=100)
high.75.1 <- get_dynamic_ews1(sim.list=trt8, bw=100)
high.50.1 <- get_dynamic_ews1(sim.list=trt9, bw=100)
nonseas.1.2 <- get_dynamic_ews2(sim.list=trt1, bw=100)
nonseas.75.2 <- get_dynamic_ews2(sim.list=trt2, bw=100)
nonseas.50.2 <- get_dynamic_ews2(sim.list=trt3, bw=100)
med.1.2 <- get_dynamic_ews2(sim.list=trt4, bw=100)
med.75.2 <- get_dynamic_ews2(sim.list=trt5, bw=100)
med.50.2 <- get_dynamic_ews2(sim.list=trt6, bw=100)
high.1.2 <- get_dynamic_ews2(sim.list=trt7, bw=100)
high.75.2 <- get_dynamic_ews2(sim.list=trt8, bw=100)
high.50.2 <- get_dynamic_ews2(sim.list=trt9, bw=100)
nonseas.1.3 <- get_dynamic_ews3(sim.list=trt1, bw=100)
nonseas.75.3 <- get_dynamic_ews3(sim.list=trt2, bw=100)
nonseas.50.3 <- get_dynamic_ews3(sim.list=trt3, bw=100)
med.1.3 <- get_dynamic_ews3(sim.list=trt4, bw=100)
med.75.3 <- get_dynamic_ews3(sim.list=trt5, bw=100)
med.50.3 <- get_dynamic_ews3(sim.list=trt6, bw=100)
high.1.3 <- get_dynamic_ews3(sim.list=trt7, bw=100)
high.75.3 <- get_dynamic_ews3(sim.list=trt8, bw=100)
high.50.3 <- get_dynamic_ews3(sim.list=trt9, bw=100)
get_dynamic_ews1 <- function(sim.list, bw=100, low.freq=85, hi.freq=10){
output <- list()
for (i in 1:length(sim.list)){
sim <- sim.list[[i]]
#spec density ratio
xx.spec.den <- get_spec_den.logmean(sim, low.freq, hi.freq)
#autocorrelation lag 1, covariance, and standard deviation
xx.acf1 <- get_dynamic_acf(x=sim$cases.per.time, acf="correlation", acf_bandwidth=bw,
center_bandwidth=bw, lag=1, center_trend="local_constant")
xx.var <- get_dynamic_acf(x=sim$cases.per.time, acf="covariance", acf_bandwidth=bw,
center_bandwidth=bw, lag=0, center_trend="local_constant")
sim$acf1 <- xx.acf1[[2]]$smooth[1:length(sim$cases.per.time)]
sim$cov <- (sqrt(xx.var[[2]]$smooth)[1:length(sim$cases.per.time)]) / (sim$cases.per.time - xx.var[[1]]$x[1:length(sim$cases.per.time)])
sim$std <- sqrt(xx.var[[2]]$smooth)[1:length(sim$cases.per.time)]
sim$spec.den <- SMA(xx.spec.den, n=bw)
#store results in a list
output[[i]] <- sim
}
return(output)
}
nonseas.1.1 <- get_dynamic_ews1(sim.list=trt1, bw=100)
nonseas.75.1 <- get_dynamic_ews1(sim.list=trt2, bw=100)
nonseas.50.1 <- get_dynamic_ews1(sim.list=trt3, bw=100)
med.1.1 <- get_dynamic_ews1(sim.list=trt4, bw=100)
trt1 <- getSampled(tmp1, 1) #sampling levels
trt2 <- getSampled(tmp1, .75)
trt3 <- getSampled(tmp1, .50)
nonseas.1.1 <- get_dynamic_ews1(sim.list=trt1, bw=100)
nonseas.75.1 <- get_dynamic_ews1(sim.list=trt2, bw=100)
nonseas.50.1 <- get_dynamic_ews1(sim.list=trt3, bw=100)
cor.n.1.1 <- get_cor(nonseas.1.1)
cor.n.75.1 <- get_cor(nonseas.75.1)
cor.n.5.1 <- get_cor(nonseas.50.1)
cor.m.1.1 <- get_cor(med.1.1)
cor.m.75.1 <- get_cor(med.75.1)
cor.m.5.1 <- get_cor(med.50.1)
cor.h.1.1 <- get_cor(high.1.1)
cor.h.75.1 <- get_cor(high.75.1)
cor.h.5.1 <- get_cor(high.50.1)
#mean ratio
cor.n.1.2 <- get_cor(nonseas.1.2)
cor.n.75.2 <- get_cor(nonseas.75.2)
cor.n.5.2 <- get_cor(nonseas.50.2)
cor.m.1.2 <- get_cor(med.1.2)
cor.m.75.2 <- get_cor(med.75.2)
cor.m.5.2 <- get_cor(med.50.2)
cor.h.1.2 <- get_cor(high.1.2)
cor.h.75.2 <- get_cor(high.75.2)
cor.h.5.2 <- get_cor(high.50.2)
#ratio
cor.n.1.3 <- get_cor(nonseas.1.3)
cor.n.75.3 <- get_cor(nonseas.75.3)
cor.n.5.3 <- get_cor(nonseas.50.3)
cor.m.1.3 <- get_cor(med.1.3)
cor.m.75.3 <- get_cor(med.75.3)
cor.m.5.3 <- get_cor(med.50.3)
cor.h.1.3 <- get_cor(high.1.3)
cor.h.75.3 <- get_cor(high.75.3)
cor.h.5.3 <- get_cor(high.50.3)
cor.n.1.1 <- get_cor(nonseas.1.1)
cor.n.75.1 <- get_cor(nonseas.75.1)
cor.n.5.1 <- get_cor(nonseas.50.1)
cor.m.1.1 <- get_cor(med.1.1)
cor.m.75.1 <- get_cor(med.75.1)
cor.m.5.1 <- get_cor(med.50.1)
cor.h.1.1 <- get_cor(high.1.1)
cor.h.75.1 <- get_cor(high.75.1)
cor.h.5.1 <- get_cor(high.50.1)
#mean ratio
cor.n.1.2 <- get_cor(nonseas.1.2)
cor.n.75.2 <- get_cor(nonseas.75.2)
cor.n.5.2 <- get_cor(nonseas.50.2)
cor.m.1.2 <- get_cor(med.1.2)
cor.m.75.2 <- get_cor(med.75.2)
cor.m.5.2 <- get_cor(med.50.2)
cor.h.1.2 <- get_cor(high.1.2)
cor.h.75.2 <- get_cor(high.75.2)
cor.h.5.2 <- get_cor(high.50.2)
#ratio
cor.n.1.3 <- get_cor(nonseas.1.3)
cor.n.75.3 <- get_cor(nonseas.75.3)
cor.n.5.3 <- get_cor(nonseas.50.3)
cor.m.1.3 <- get_cor(med.1.3)
cor.m.75.3 <- get_cor(med.75.3)
cor.m.5.3 <- get_cor(med.50.3)
cor.h.1.3 <- get_cor(high.1.3)
cor.h.75.3 <- get_cor(high.75.3)
cor.h.5.3 <- get_cor(high.50.3)
get_cor <- function(sim.list, null.1=800, null.2=1200, test.1=1400, test.2=1800){
#initialize empty list
spec.den0 <- c()  #power ratio null interval
spec.den1 <- c()  #power ratio test interval
acf0 <- c() #acf null interval
acf1 <- c() #acf test interval
sd0 <- c()  #sd null interval
sd1 <- c()  #sd test interval
cv0 <- c()  #cv null interval
cv1 <- c()  #cv test interval
for (i in 1:length(sim.list)){
sim <- sim.list[[i]]
spec.den0c <- cor.test(sim$spec.den[null.1 : null.2], seq(null.1, null.2), method = "kendall")
spec.den1c <- cor.test(sim$spec.den[test.1 : test.2], seq(test.1, test.2), method = "kendall")
spec.den0[i] <- as.numeric(spec.den0c$estimate)                     #extract correlation value
spec.den1[i] <- as.numeric(spec.den1c$estimate)
#     spec.den0 <- mean(sim$spec.den[null.1 : null.2])
#     spec.den1 <- mean(sim$spec.den[test.1 : test.2])
acf0[i] <- cor(sim$acf1[null.1 : null.2], seq(null.1, null.2))
acf1[i] <- cor(sim$acf1[test.1 : test.2], seq(test.1, test.2))
sd0[i] <- cor(sim$std[null.1 : null.2], seq(null.1, null.2))
sd1[i] <- cor(sim$std[test.1 : test.2], seq(test.1, test.2))
cv0[i] <- cor(sim$cov[null.1 : null.2], seq(null.2, null.1))
cv1[i] <- cor(sim$cov[test.1 : test.2], seq(test.2, test.1))  #cv decreases prior to crit trans
}
return(data.frame(acf0=acf0, acf1=acf1, sd0=sd0, sd1=sd1, cv0=cv0, cv1=cv1, spec.den0=spec.den0, spec.den1=spec.den1))
}
cor.n.1.1 <- get_cor(nonseas.1.1)
cor.n.75.1 <- get_cor(nonseas.75.1)
cor.n.5.1 <- get_cor(nonseas.50.1)
cor.m.1.1 <- get_cor(med.1.1)
cor.m.75.1 <- get_cor(med.75.1)
cor.m.5.1 <- get_cor(med.50.1)
cor.h.1.1 <- get_cor(high.1.1)
cor.h.75.1 <- get_cor(high.75.1)
cor.h.5.1 <- get_cor(high.50.1)
#mean ratio
cor.n.1.2 <- get_cor(nonseas.1.2)
cor.n.75.2 <- get_cor(nonseas.75.2)
cor.n.5.2 <- get_cor(nonseas.50.2)
cor.m.1.2 <- get_cor(med.1.2)
cor.m.75.2 <- get_cor(med.75.2)
cor.m.5.2 <- get_cor(med.50.2)
cor.h.1.2 <- get_cor(high.1.2)
cor.h.75.2 <- get_cor(high.75.2)
cor.h.5.2 <- get_cor(high.50.2)
#ratio
cor.n.1.3 <- get_cor(nonseas.1.3)
cor.n.75.3 <- get_cor(nonseas.75.3)
cor.n.5.3 <- get_cor(nonseas.50.3)
cor.m.1.3 <- get_cor(med.1.3)
cor.m.75.3 <- get_cor(med.75.3)
cor.m.5.3 <- get_cor(med.50.3)
cor.h.1.3 <- get_cor(high.1.3)
cor.h.75.3 <- get_cor(high.75.3)
cor.h.5.3 <- get_cor(high.50.3)
cor.n.1.1 -> m11
cor.n.75.1 -> m12
cor.n.5.1 -> m13
cor.m.1.1 -> m14
cor.m.75.1 -> m15
cor.m.5.1 -> m16
cor.h.1.1 -> m17
cor.h.75.1 -> m18
cor.h.5.1 -> m19
#m11: nonseas 100% reporting method 1
roc.spec.den.11 <-  get_roc(dat=NULL, null_dist=m11$spec.den0, test_dist=m11$spec.den1, silent=FALSE)
auc.spec.den.11 <-  integrate.xy (roc.spec.den$True.positives,roc.spec.den$False.positives)
roc.acf.11 <- get_roc(dat=NULL, null_dist=m11$acf0, test_dist=m11$acf1, silent=FALSE)
auc.acf.11 <- integrate.xy (roc.acf$True.positives,roc.acf$False.positives)
roc.sd.11 <-  get_roc(dat=NULL, null_dist=m11$sd0, test_dist=m11$sd1, silent=FALSE)
auc.sd.11 <-  integrate.xy (roc.sd$True.positives,roc.sd$False.positives)
roc.cv.11 <-  get_roc(dat=NULL, null_dist=m11$cv0, test_dist=m11$cv1, silent=FALSE)
auc.cv.11 <-  integrate.xy (roc.cv$True.positives,roc.cv$False.positives)
#m12: nonseas 75% reporting method 1
roc.spec.den.12 <-  get_roc(dat=NULL, null_dist=m12$spec.den0, test_dist=m12$spec.den1, silent=FALSE)
auc.spec.den.12 <-  integrate.xy (roc.spec.den$True.positives,roc.spec.den$False.positives)
roc.acf.12 <- get_roc(dat=NULL, null_dist=m12$acf0, test_dist=m12$acf1, silent=FALSE)
auc.acf.12 <- integrate.xy (roc.acf$True.positives,roc.acf$False.positives)
roc.sd.12 <-  get_roc(dat=NULL, null_dist=m12$sd0, test_dist=m12$sd1, silent=FALSE)
auc.sd.12 <-  integrate.xy (roc.sd$True.positives,roc.sd$False.positives)
roc.cv.12 <-  get_roc(dat=NULL, null_dist=m12$cv0, test_dist=m12$cv1, silent=FALSE)
auc.cv.12 <-  integrate.xy (roc.cv$True.positives,roc.cv$False.positives)
#m13: nonseas 50% reporting method 1
roc.spec.den.13 <-  get_roc(dat=NULL, null_dist=m13$spec.den0, test_dist=m13$spec.den1, silent=FALSE)
auc.spec.den.13 <-  integrate.xy (roc.spec.den$True.positives,roc.spec.den$False.positives)
roc.acf.13 <- get_roc(dat=NULL, null_dist=m13$acf0, test_dist=m13$acf1, silent=FALSE)
auc.acf.13 <- integrate.xy (roc.acf$True.positives,roc.acf$False.positives)
roc.sd.13 <-  get_roc(dat=NULL, null_dist=m13$sd0, test_dist=m13$sd1, silent=FALSE)
auc.sd.13 <-  integrate.xy (roc.sd$True.positives,roc.sd$False.positives)
roc.cv.13 <-  get_roc(dat=NULL, null_dist=m13$cv0, test_dist=m13$cv1, silent=FALSE)
auc.cv.13 <-  integrate.xy (roc.cv$True.positives,roc.cv$False.positives)
#m14: med 100% reporting method 1
roc.spec.den.14 <-  get_roc(dat=NULL, null_dist=m14$spec.den0, test_dist=m14$spec.den1, silent=FALSE)
auc.spec.den.14 <-  integrate.xy (roc.spec.den$True.positives,roc.spec.den$False.positives)
roc.acf.14 <- get_roc(dat=NULL, null_dist=m14$acf0, test_dist=m14$acf1, silent=FALSE)
auc.acf.14 <- integrate.xy (roc.acf$True.positives,roc.acf$False.positives)
roc.sd.14 <-  get_roc(dat=NULL, null_dist=m14$sd0, test_dist=m14$sd1, silent=FALSE)
auc.sd.14 <-  integrate.xy (roc.sd$True.positives,roc.sd$False.positives)
roc.cv.14 <-  get_roc(dat=NULL, null_dist=m14$cv0, test_dist=m14$cv1, silent=FALSE)
auc.cv.14 <-  integrate.xy (roc.cv$True.positives,roc.cv$False.positives)
#m15: med 75% reporting method 1
roc.spec.den.15 <-  get_roc(dat=NULL, null_dist=m15$spec.den0, test_dist=m15$spec.den1, silent=FALSE)
auc.spec.den.15 <-  integrate.xy (roc.spec.den$True.positives,roc.spec.den$False.positives)
roc.acf.15 <- get_roc(dat=NULL, null_dist=m15$acf0, test_dist=m15$acf1, silent=FALSE)
auc.acf.15 <- integrate.xy (roc.acf$True.positives,roc.acf$False.positives)
roc.sd.15 <-  get_roc(dat=NULL, null_dist=m15$sd0, test_dist=m15$sd1, silent=FALSE)
auc.sd.15 <-  integrate.xy (roc.sd$True.positives,roc.sd$False.positives)
roc.cv.15 <-  get_roc(dat=NULL, null_dist=m15$cv0, test_dist=m15$cv1, silent=FALSE)
auc.cv.15 <-  integrate.xy (roc.cv$True.positives,roc.cv$False.positives)
#m16: med 50% reporting method 1
roc.spec.den.16 <-  get_roc(dat=NULL, null_dist=m16$spec.den0, test_dist=m16$spec.den1, silent=FALSE)
auc.spec.den.16 <-  integrate.xy (roc.spec.den$True.positives,roc.spec.den$False.positives)
roc.acf.16 <- get_roc(dat=NULL, null_dist=m16$acf0, test_dist=m16$acf1, silent=FALSE)
auc.acf.16 <- integrate.xy (roc.acf$True.positives,roc.acf$False.positives)
roc.sd.16 <-  get_roc(dat=NULL, null_dist=m16$sd0, test_dist=m16$sd1, silent=FALSE)
auc.sd.16 <-  integrate.xy (roc.sd$True.positives,roc.sd$False.positives)
roc.cv.16 <-  get_roc(dat=NULL, null_dist=m16$cv0, test_dist=m16$cv1, silent=FALSE)
auc.cv.16 <-  integrate.xy (roc.cv$True.positives,roc.cv$False.positives)
#m17: hi 100% reporting method 1
roc.spec.den.17 <-  get_roc(dat=NULL, null_dist=m17$spec.den0, test_dist=m17$spec.den1, silent=FALSE)
auc.spec.den.17 <-  integrate.xy (roc.spec.den$True.positives,roc.spec.den$False.positives)
roc.acf.17 <- get_roc(dat=NULL, null_dist=m17$acf0, test_dist=m17$acf1, silent=FALSE)
auc.acf.17 <- integrate.xy (roc.acf$True.positives,roc.acf$False.positives)
roc.sd.17 <-  get_roc(dat=NULL, null_dist=m17$sd0, test_dist=m17$sd1, silent=FALSE)
auc.sd.17 <-  integrate.xy (roc.sd$True.positives,roc.sd$False.positives)
roc.cv.17 <-  get_roc(dat=NULL, null_dist=m17$cv0, test_dist=m17$cv1, silent=FALSE)
auc.cv.17 <-  integrate.xy (roc.cv$True.positives,roc.cv$False.positives)
#m18: hi 75% reporting method 1
roc.spec.den.18 <-  get_roc(dat=NULL, null_dist=m18$spec.den0, test_dist=m18$spec.den1, silent=FALSE)
auc.spec.den.18 <-  integrate.xy (roc.spec.den$True.positives,roc.spec.den$False.positives)
roc.acf.18 <- get_roc(dat=NULL, null_dist=m18$acf0, test_dist=m18$acf1, silent=FALSE)
auc.acf.18 <- integrate.xy (roc.acf$True.positives,roc.acf$False.positives)
roc.sd.18 <-  get_roc(dat=NULL, null_dist=m18$sd0, test_dist=m18$sd1, silent=FALSE)
auc.sd.18 <-  integrate.xy (roc.sd$True.positives,roc.sd$False.positives)
roc.cv.18 <-  get_roc(dat=NULL, null_dist=m18$cv0, test_dist=m18$cv1, silent=FALSE)
auc.cv.18 <-  integrate.xy (roc.cv$True.positives,roc.cv$False.positives)
#m19: hi 50% reporting method 1
roc.spec.den.19 <-  get_roc(dat=NULL, null_dist=m19$spec.den0, test_dist=m19$spec.den1, silent=FALSE)
auc.spec.den.19 <-  integrate.xy (roc.spec.den$True.positives,roc.spec.den$False.positives)
roc.acf.19 <- get_roc(dat=NULL, null_dist=m19$acf0, test_dist=m19$acf1, silent=FALSE)
auc.acf.19 <- integrate.xy (roc.acf$True.positives,roc.acf$False.positives)
roc.sd.19 <-  get_roc(dat=NULL, null_dist=m19$sd0, test_dist=m19$sd1, silent=FALSE)
auc.sd.19 <-  integrate.xy (roc.sd$True.positives,roc.sd$False.positives)
roc.cv.19 <-  get_roc(dat=NULL, null_dist=m19$cv0, test_dist=m19$cv1, silent=FALSE)
auc.cv.19 <-  integrate.xy (roc.cv$True.positives,roc.cv$False.positives)
get_roc <- function (dat, pts = 50, null_dist = NULL, test_dist = NULL,
silent = TRUE)
{
if (!is.null(dat)) {
null_dist <- subset(dat, simulation == "null")$value
test_dist <- subset(dat, simulation == "test")$value
}
n_null <- length(null_dist)
n_test <- length(test_dist)
lower <- min(null_dist, test_dist)
upper <- max(null_dist, test_dist)
threshold <- seq(lower, upper, length = pts)
roc <- sapply(threshold, function(thresh) {
c(sum(null_dist > thresh)/n_null, sum(test_dist > thresh)/n_test)
})
roc <- t(roc)
f <- approx(roc[, 1], roc[, 2], n = 200)
delta <- f$x[2] - f$x[1]
area <- sum(f$y * delta)
out <- cbind(threshold, roc, area)
out <- as.data.frame(out)
names(out) <- c("Threshold", "False.positives", "True.positives", "AUC")
out
}
get_auc <- function(roc_obj){
auc <- roc_obj$AUC[1]
return(auc)
}
cor.n.1.1 -> m11
cor.n.75.1 -> m12
cor.n.5.1 -> m13
cor.m.1.1 -> m14
cor.m.75.1 -> m15
cor.m.5.1 -> m16
cor.h.1.1 -> m17
cor.h.75.1 -> m18
cor.h.5.1 -> m19
#m11: nonseas 100% reporting method 1
roc.spec.den.11 <-  get_roc(dat=NULL, null_dist=m11$spec.den0, test_dist=m11$spec.den1, silent=FALSE)
auc.spec.den.11 <-  integrate.xy (roc.spec.den$True.positives,roc.spec.den$False.positives)
roc.acf.11 <- get_roc(dat=NULL, null_dist=m11$acf0, test_dist=m11$acf1, silent=FALSE)
auc.acf.11 <- integrate.xy (roc.acf$True.positives,roc.acf$False.positives)
roc.sd.11 <-  get_roc(dat=NULL, null_dist=m11$sd0, test_dist=m11$sd1, silent=FALSE)
auc.sd.11 <-  integrate.xy (roc.sd$True.positives,roc.sd$False.positives)
roc.cv.11 <-  get_roc(dat=NULL, null_dist=m11$cv0, test_dist=m11$cv1, silent=FALSE)
auc.cv.11 <-  integrate.xy (roc.cv$True.positives,roc.cv$False.positives)
#m12: nonseas 75% reporting method 1
roc.spec.den.12 <-  get_roc(dat=NULL, null_dist=m12$spec.den0, test_dist=m12$spec.den1, silent=FALSE)
auc.spec.den.12 <-  integrate.xy (roc.spec.den$True.positives,roc.spec.den$False.positives)
roc.acf.12 <- get_roc(dat=NULL, null_dist=m12$acf0, test_dist=m12$acf1, silent=FALSE)
auc.acf.12 <- integrate.xy (roc.acf$True.positives,roc.acf$False.positives)
roc.sd.12 <-  get_roc(dat=NULL, null_dist=m12$sd0, test_dist=m12$sd1, silent=FALSE)
auc.sd.12 <-  integrate.xy (roc.sd$True.positives,roc.sd$False.positives)
roc.cv.12 <-  get_roc(dat=NULL, null_dist=m12$cv0, test_dist=m12$cv1, silent=FALSE)
auc.cv.12 <-  integrate.xy (roc.cv$True.positives,roc.cv$False.positives)
#m13: nonseas 50% reporting method 1
roc.spec.den.13 <-  get_roc(dat=NULL, null_dist=m13$spec.den0, test_dist=m13$spec.den1, silent=FALSE)
auc.spec.den.13 <-  integrate.xy (roc.spec.den$True.positives,roc.spec.den$False.positives)
roc.acf.13 <- get_roc(dat=NULL, null_dist=m13$acf0, test_dist=m13$acf1, silent=FALSE)
auc.acf.13 <- integrate.xy (roc.acf$True.positives,roc.acf$False.positives)
roc.sd.13 <-  get_roc(dat=NULL, null_dist=m13$sd0, test_dist=m13$sd1, silent=FALSE)
auc.sd.13 <-  integrate.xy (roc.sd$True.positives,roc.sd$False.positives)
roc.cv.13 <-  get_roc(dat=NULL, null_dist=m13$cv0, test_dist=m13$cv1, silent=FALSE)
auc.cv.13 <-  integrate.xy (roc.cv$True.positives,roc.cv$False.positives)
#m14: med 100% reporting method 1
roc.spec.den.14 <-  get_roc(dat=NULL, null_dist=m14$spec.den0, test_dist=m14$spec.den1, silent=FALSE)
auc.spec.den.14 <-  integrate.xy (roc.spec.den$True.positives,roc.spec.den$False.positives)
roc.acf.14 <- get_roc(dat=NULL, null_dist=m14$acf0, test_dist=m14$acf1, silent=FALSE)
auc.acf.14 <- integrate.xy (roc.acf$True.positives,roc.acf$False.positives)
roc.sd.14 <-  get_roc(dat=NULL, null_dist=m14$sd0, test_dist=m14$sd1, silent=FALSE)
auc.sd.14 <-  integrate.xy (roc.sd$True.positives,roc.sd$False.positives)
roc.cv.14 <-  get_roc(dat=NULL, null_dist=m14$cv0, test_dist=m14$cv1, silent=FALSE)
auc.cv.14 <-  integrate.xy (roc.cv$True.positives,roc.cv$False.positives)
#m15: med 75% reporting method 1
roc.spec.den.15 <-  get_roc(dat=NULL, null_dist=m15$spec.den0, test_dist=m15$spec.den1, silent=FALSE)
auc.spec.den.15 <-  integrate.xy (roc.spec.den$True.positives,roc.spec.den$False.positives)
roc.acf.15 <- get_roc(dat=NULL, null_dist=m15$acf0, test_dist=m15$acf1, silent=FALSE)
auc.acf.15 <- integrate.xy (roc.acf$True.positives,roc.acf$False.positives)
roc.sd.15 <-  get_roc(dat=NULL, null_dist=m15$sd0, test_dist=m15$sd1, silent=FALSE)
auc.sd.15 <-  integrate.xy (roc.sd$True.positives,roc.sd$False.positives)
roc.cv.15 <-  get_roc(dat=NULL, null_dist=m15$cv0, test_dist=m15$cv1, silent=FALSE)
auc.cv.15 <-  integrate.xy (roc.cv$True.positives,roc.cv$False.positives)
#m16: med 50% reporting method 1
roc.spec.den.16 <-  get_roc(dat=NULL, null_dist=m16$spec.den0, test_dist=m16$spec.den1, silent=FALSE)
auc.spec.den.16 <-  integrate.xy (roc.spec.den$True.positives,roc.spec.den$False.positives)
roc.acf.16 <- get_roc(dat=NULL, null_dist=m16$acf0, test_dist=m16$acf1, silent=FALSE)
auc.acf.16 <- integrate.xy (roc.acf$True.positives,roc.acf$False.positives)
roc.sd.16 <-  get_roc(dat=NULL, null_dist=m16$sd0, test_dist=m16$sd1, silent=FALSE)
auc.sd.16 <-  integrate.xy (roc.sd$True.positives,roc.sd$False.positives)
roc.cv.16 <-  get_roc(dat=NULL, null_dist=m16$cv0, test_dist=m16$cv1, silent=FALSE)
auc.cv.16 <-  integrate.xy (roc.cv$True.positives,roc.cv$False.positives)
#m17: hi 100% reporting method 1
roc.spec.den.17 <-  get_roc(dat=NULL, null_dist=m17$spec.den0, test_dist=m17$spec.den1, silent=FALSE)
auc.spec.den.17 <-  integrate.xy (roc.spec.den$True.positives,roc.spec.den$False.positives)
roc.acf.17 <- get_roc(dat=NULL, null_dist=m17$acf0, test_dist=m17$acf1, silent=FALSE)
auc.acf.17 <- integrate.xy (roc.acf$True.positives,roc.acf$False.positives)
roc.sd.17 <-  get_roc(dat=NULL, null_dist=m17$sd0, test_dist=m17$sd1, silent=FALSE)
auc.sd.17 <-  integrate.xy (roc.sd$True.positives,roc.sd$False.positives)
roc.cv.17 <-  get_roc(dat=NULL, null_dist=m17$cv0, test_dist=m17$cv1, silent=FALSE)
auc.cv.17 <-  integrate.xy (roc.cv$True.positives,roc.cv$False.positives)
#m18: hi 75% reporting method 1
roc.spec.den.18 <-  get_roc(dat=NULL, null_dist=m18$spec.den0, test_dist=m18$spec.den1, silent=FALSE)
auc.spec.den.18 <-  integrate.xy (roc.spec.den$True.positives,roc.spec.den$False.positives)
roc.acf.18 <- get_roc(dat=NULL, null_dist=m18$acf0, test_dist=m18$acf1, silent=FALSE)
auc.acf.18 <- integrate.xy (roc.acf$True.positives,roc.acf$False.positives)
roc.sd.18 <-  get_roc(dat=NULL, null_dist=m18$sd0, test_dist=m18$sd1, silent=FALSE)
auc.sd.18 <-  integrate.xy (roc.sd$True.positives,roc.sd$False.positives)
roc.cv.18 <-  get_roc(dat=NULL, null_dist=m18$cv0, test_dist=m18$cv1, silent=FALSE)
auc.cv.18 <-  integrate.xy (roc.cv$True.positives,roc.cv$False.positives)
#m19: hi 50% reporting method 1
roc.spec.den.19 <-  get_roc(dat=NULL, null_dist=m19$spec.den0, test_dist=m19$spec.den1, silent=FALSE)
auc.spec.den.19 <-  integrate.xy (roc.spec.den$True.positives,roc.spec.den$False.positives)
roc.acf.19 <- get_roc(dat=NULL, null_dist=m19$acf0, test_dist=m19$acf1, silent=FALSE)
auc.acf.19 <- integrate.xy (roc.acf$True.positives,roc.acf$False.positives)
roc.sd.19 <-  get_roc(dat=NULL, null_dist=m19$sd0, test_dist=m19$sd1, silent=FALSE)
auc.sd.19 <-  integrate.xy (roc.sd$True.positives,roc.sd$False.positives)
roc.cv.19 <-  get_roc(dat=NULL, null_dist=m19$cv0, test_dist=m19$cv1, silent=FALSE)
auc.cv.19 <-  integrate.xy (roc.cv$True.positives,roc.cv$False.positives)
nonseas.1.2 <- get_dynamic_ews2(sim.list=trt1, bw=100)
nonseas.1.1 <- get_dynamic_ews1(sim.list=trt1, bw=100)
nonseas.75.1 <- get_dynamic_ews1(sim.list=trt2, bw=100)
nonseas.50.1 <- get_dynamic_ews1(sim.list=trt3, bw=100)
med.1.1 <- get_dynamic_ews1(sim.list=trt4, bw=100)
med.75.1 <- get_dynamic_ews1(sim.list=trt5, bw=100)
med.50.1 <- get_dynamic_ews1(sim.list=trt6, bw=100)
high.1.1 <- get_dynamic_ews1(sim.list=trt7, bw=100)
high.75.1 <- get_dynamic_ews1(sim.list=trt8, bw=100)
high.50.1 <- get_dynamic_ews1(sim.list=trt9, bw=100)
nonseas.1.2 <- get_dynamic_ews2(sim.list=trt1, bw=100)
nonseas.75.2 <- get_dynamic_ews2(sim.list=trt2, bw=100)
nonseas.50.2 <- get_dynamic_ews2(sim.list=trt3, bw=100)
med.1.2 <- get_dynamic_ews2(sim.list=trt4, bw=100)
med.75.2 <- get_dynamic_ews2(sim.list=trt5, bw=100)
med.50.2 <- get_dynamic_ews2(sim.list=trt6, bw=100)
high.1.2 <- get_dynamic_ews2(sim.list=trt7, bw=100)
high.75.2 <- get_dynamic_ews2(sim.list=trt8, bw=100)
high.50.2 <- get_dynamic_ews2(sim.list=trt9, bw=100)
nonseas.1.3 <- get_dynamic_ews3(sim.list=trt1, bw=100)
nonseas.75.3 <- get_dynamic_ews3(sim.list=trt2, bw=100)
nonseas.50.3 <- get_dynamic_ews3(sim.list=trt3, bw=100)
med.1.3 <- get_dynamic_ews3(sim.list=trt4, bw=100)
med.75.3 <- get_dynamic_ews3(sim.list=trt5, bw=100)
med.50.3 <- get_dynamic_ews3(sim.list=trt6, bw=100)
high.1.3 <- get_dynamic_ews3(sim.list=trt7, bw=100)
high.75.3 <- get_dynamic_ews3(sim.list=trt8, bw=100)
high.50.3 <- get_dynamic_ews3(sim.list=trt9, bw=100)
library("plyr")     ## for rdply()
library("reshape2") ## for melt()
library("emdbook")  ## for lambertW()
library("ggplot2"); theme_set(theme_bw())
install.packages("emdbook")
ratefun <- function(x,p) {
with(as.list(c(x,p)),{
c(inf=beta*S*I/N,  ## scale inf by pop size
recover=gamma*I)
})
}
transfun <- function(x,w) {
switch(w,
x + c(-1,1),   ## infection: S-1, I+1
x + c(0,-1))   ## removal: I-1
}
run <- function(p=c(beta=2,gamma=1,N=100),
I0=1,
itmax=1e5,
ret=c("final","all")) {
ret <- match.arg(ret)
if (ret=="all") {
rmat <- matrix(NA,nrow=itmax,ncol=2,
dimnames=list(NULL,c("t","trans")))
}
x <- c(S=unname(p["N"])-I0,I=I0)
it <- 1
t <- 0
trans <- c(0,0)
while (x["I"]>0 & it<itmax) {
r <- ratefun(x,p)
t <- t+rexp(1,rate=sum(r))
w <- sample(length(r),size=1,prob=r)
x <- transfun(x,w)
if (ret=="all") rmat[it,] <- c(t,w)
it <- it+1
}
if (ret=="all") return(rmat[!is.na(rmat[,1]),])
return(c(S=unname(x["S"]),t=t,it=it))
}
source('~/.active-rstudio-document', echo=TRUE)
## can use .progress="text" if running interactively
ex1 <- rdply(1e3,run())
ex2 <- rdply(1e3,run(p=c(beta=1.1,gamma=1,N=100)))
mm <- function(x) {
melt(x[c("S","t")],id.var=character(0))
}
## analytic computation of expected final size
## from ?lambertW
finalsize <- function(R0) {
1+1/R0*lambertW(-R0*exp(-R0))
}
finalsize(2)  ## check final size (should add to plot)
(g0 <- ggplot(mm(ex1),aes(x=value))+geom_histogram()+
facet_wrap(~variable,scale="free"))
?switch
str(ex0)
ex1 <- rdply(1e3,run())
str(ex1)
plot(ex1$it)
plot(ex1$it, type="l")
plot(ex1$S)
plot(ex1$S, type="l")
(g0 <- ggplot(mm(ex1),aes(x=value))+geom_histogram()+
facet_wrap(~variable,scale="free"))
(g0 <- ggplot(mm(ex2),aes(x=value))+geom_histogram()+
facet_wrap(~variable,scale="free"))
ex0 <- run(ret="final")
str(ex0)
ex2 <- rdply(1e3,run(p=c(beta=1.1,gamma=1,N=100, ret="final")))
ex2 <- rdply(1e3,run(p=c(beta=1.1,gamma=1,N=100), ret="final"))
str(ex2)
plot(ex2$S)
(g0 <- ggplot(mm(ex2),aes(x=value))+geom_histogram()+
facet_wrap(~variable,scale="free"))
ex2 <- rdply(1e3,run(p=c(beta=1.1,gamma=1,N=10000), ret="final"))
View(asia)
require(dismo)
require(raster)
require(maptools)
require(spatstat)
require(rworldmap)
require(scatterplot3d)
install.packages("spatstat")
require(dismo)
require(raster)
require(maptools)
require(spatstat)
require(rworldmap)
install.packages("rworldmap")
require(spatstat)
require(rworldmap)
require(scatterplot3d)
install.packages("scatterplot3d")
setwd("~/Documents/culex-SDM/code")
source('functions.R')   #project specific functions
load('/media/pbmpb13/733A-04B6/culex-project/environment-data/africa-baseline')
